{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Image from '@expo/image-utils';\nimport type { ExpoConfig } from 'expo/config';\nimport * as path from 'path';\nimport { URL } from 'url';\n\nimport { createPWAManifestFromWebConfig, getConfigForPWA } from './Manifest';\nimport { HTMLOutput, IconOptions, Manifest, ProjectOptions, SplashIcon } from './Manifest.types';\nimport { assembleOrientationMedia, getDevices } from './Splash';\n\n/**\n * Joins a url protocol + host to path segments, falls back to path.join\n * if result is not a valid url.\n */\nexport function joinUrlPath(publicPath: string, ...toJoin: string[]): string {\n  const segments = path.join(...toJoin);\n  try {\n    // Throws if publicPath is not a valid protocol+host\n    return new URL(segments, publicPath).href;\n  } catch {\n    return path.join(publicPath, segments);\n  }\n}\n\nexport async function generateAsync(\n  type: string,\n  options: ProjectOptions,\n  icon: IconOptions\n): Promise<HTMLOutput[]> {\n  switch (type) {\n    case 'splash':\n      return generateSplashAsync(options, icon);\n    case 'safari-icon':\n      return generateAppleIconAsync(options, icon, {});\n    case 'chrome-icon':\n      return generateChromeIconAsync(options, icon, {});\n    case 'favicon':\n      return generateFaviconAsync(options, icon);\n  }\n  throw new Error(`Invalid command type: ${type}`);\n}\n\nexport async function generateSplashAsync(\n  { projectRoot, publicPath }: ProjectOptions,\n  icon: IconOptions\n): Promise<HTMLOutput[]> {\n  const cacheType = 'apple-touch-startup-image';\n\n  // You cannot lock iOS PWA orientation, we should produce every splash screen\n  // orientation. We don't however because in iOS 13 it's far more rare to see landscape splash screens.\n  const devices = getDevices();\n\n  const icons: SplashIcon[] = Array.isArray(icon) ? icon : [];\n  if (!Array.isArray(icon)) {\n    for (const device of devices) {\n      for (const orientation of device.orientations) {\n        let width = 0;\n        let height = 0;\n        if (orientation !== 'portrait') {\n          width = device.height;\n          height = device.width;\n        } else {\n          height = device.height;\n          width = device.width;\n        }\n\n        const name = `apple-touch-startup-image-${width}x${height}.png`;\n        icons.push({\n          ...icon,\n          name,\n          width,\n          height,\n          media: assembleOrientationMedia(device.width, device.height, device.scale, orientation),\n        });\n      }\n    }\n  }\n\n  const data = await Promise.all<HTMLOutput>(\n    icons.map(\n      async (icon: SplashIcon): Promise<HTMLOutput> => {\n        // Ensure the default `splash.resizeMode` is used here:\n        // https://docs.expo.dev/versions/latest/config/app/#splash\n        if (!icon.resizeMode) {\n          icon.resizeMode = 'contain';\n        }\n        const { source, name } = await Image.generateImageAsync({ projectRoot, cacheType }, icon);\n\n        const href = `pwa/apple-touch-startup-image/${name}`;\n\n        return {\n          asset: {\n            source,\n            path: href,\n          },\n          tag: {\n            tagName: 'link',\n            attributes: {\n              rel: 'apple-touch-startup-image',\n              media: icon.media,\n              // TODO(Bacon): Use sizes to query splash screens better\n              // sizes: `${icon.width}x${icon.height}`,\n              href: joinUrlPath(publicPath, href),\n            },\n          },\n        };\n      }\n    )\n  );\n\n  await Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n\n  return data;\n}\n\nexport async function generateAppleIconAsync(\n  { projectRoot, publicPath }: ProjectOptions,\n  icon: IconOptions,\n  { sizes = [180] }: { sizes?: number[] }\n): Promise<HTMLOutput[]> {\n  const cacheType = 'apple-touch-icon';\n\n  const data = await Promise.all<HTMLOutput>(\n    sizes.map(\n      async (size: number): Promise<HTMLOutput> => {\n        const rel = 'apple-touch-icon';\n        const { source, name } = await Image.generateImageAsync(\n          { projectRoot, cacheType },\n          { ...icon, width: size, height: size, name: `${rel}-${size}.png` }\n        );\n\n        const href = `pwa/${rel}/${name}`;\n\n        return {\n          asset: {\n            source,\n            path: href,\n          },\n          tag: {\n            tagName: 'link',\n            attributes: {\n              rel,\n              sizes: `${size}x${size}`,\n              href: joinUrlPath(publicPath, href),\n            },\n          },\n        };\n      }\n    )\n  );\n\n  // Don't clear the caches if no generation was performed.\n  if (!sizes.length) {\n    await Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n  }\n\n  return data;\n}\n\nexport async function generateChromeIconAsync(\n  { projectRoot, publicPath }: ProjectOptions,\n  icon: IconOptions,\n  { sizes = [144, 192, 512] }: { sizes?: number[] }\n): Promise<HTMLOutput[]> {\n  const cacheType = 'chrome-icon';\n\n  const data = await Promise.all<HTMLOutput>(\n    sizes.map(\n      async (size: number): Promise<HTMLOutput> => {\n        const rel = 'chrome-icon';\n        const { source, name } = await Image.generateImageAsync(\n          { projectRoot, cacheType },\n          { ...icon, width: size, height: size, name: `${rel}-${size}.png` }\n        );\n\n        const href = `pwa/${rel}/${name}`;\n\n        return {\n          asset: {\n            source,\n            path: href,\n          },\n          manifest: {\n            src: joinUrlPath(publicPath, href),\n            sizes: `${size}x${size}`,\n            type: 'image/png',\n          },\n        };\n      }\n    )\n  );\n\n  // Don't clear the caches if no generation was performed.\n  if (!sizes.length) {\n    await Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n  }\n\n  return data;\n}\n\nexport async function generateFaviconAsync(\n  { projectRoot, publicPath }: ProjectOptions,\n  icon: IconOptions\n): Promise<HTMLOutput[]> {\n  const cacheType = 'favicon';\n  const dimensions = [16, 32, 48];\n  const data: HTMLOutput[] = await Promise.all<HTMLOutput>(\n    dimensions.map(\n      async (size: number): Promise<HTMLOutput> => {\n        const rel = 'icon';\n        const { source, name } = await Image.generateImageAsync(\n          { projectRoot, cacheType },\n          {\n            ...icon,\n            backgroundColor: icon.backgroundColor || 'transparent',\n            width: size,\n            height: size,\n            name: `favicon-${size}.png`,\n          }\n        );\n\n        const href = `${name}`;\n\n        return {\n          asset: {\n            source,\n            path: href,\n          },\n          tag: {\n            tagName: 'link',\n            attributes: {\n              rel,\n              type: 'image/png',\n              sizes: `${size}x${size}`,\n              href: joinUrlPath(publicPath, href),\n            },\n          },\n        };\n      }\n    )\n  );\n\n  const faviconUrl = joinUrlPath(publicPath, 'favicon.ico');\n\n  const largestImageBuffer = data[data.length - 1].asset.source;\n\n  const faviconBuffer = await Image.generateFaviconAsync(largestImageBuffer, dimensions);\n\n  await Image.Cache.clearUnusedCachesAsync(projectRoot, cacheType);\n\n  return [\n    data[0],\n    data[1],\n    {\n      asset: { source: faviconBuffer, path: 'favicon.ico' },\n      tag: {\n        tagName: 'link',\n        attributes: { rel: 'shortcut icon', href: faviconUrl },\n      },\n    },\n  ];\n}\n\nexport async function generateManifestAsync(\n  options: ProjectOptions,\n  configPath?: string,\n  config?: ExpoConfig\n): Promise<HTMLOutput[]> {\n  const manifest = generateManifestJson(options, config);\n  return [\n    {\n      // TODO: Bacon: Make the types more flexible\n      asset: { source: JSON.stringify(manifest, null, 2) as any, path: 'manifest.json' },\n      tag: {\n        tagName: 'link',\n        attributes: { rel: 'manifest', href: joinUrlPath(options.publicPath, 'manifest.json') },\n      },\n    },\n  ];\n}\n\nexport function generateManifestJson(\n  { projectRoot }: Partial<ProjectOptions>,\n  config?: ExpoConfig\n): Manifest {\n  if (!config) {\n    if (!projectRoot) throw new Error('You must either define projectRoot or config');\n    config = getConfigForPWA(projectRoot);\n  }\n  return createPWAManifestFromWebConfig(config.web);\n}\n\nexport { getConfigForPWA };\nexport {\n  getSafariStartupImageConfig,\n  getSafariIconConfig,\n  getFaviconIconConfig,\n  getChromeIconConfig,\n} from './Manifest';\n\nexport { IconOptions, ProjectOptions, HTMLOutput, PWAConfig } from './Manifest.types';\n"]}