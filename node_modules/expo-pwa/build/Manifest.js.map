{"version":3,"file":"Manifest.js","sourceRoot":"","sources":["../src/Manifest.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AppJSONConfig,\n  ExpoConfig,\n  getConfig,\n  getNameFromConfig,\n  getWebOutputPath,\n} from 'expo/config';\n\nimport { IconOptions, Manifest, PWAConfig } from './Manifest.types';\n\n// Use root to work better with create-react-app\nconst DEFAULT_LANGUAGE_ISO_CODE = `en`;\nconst DEFAULT_DISPLAY = 'standalone';\nconst DEFAULT_STATUS_BAR = 'black-translucent';\nconst DEFAULT_PREFER_RELATED_APPLICATIONS = true;\n\n// Convert expo value to PWA value\nfunction ensurePWAorientation(orientation: string): string | undefined {\n  if (orientation && typeof orientation === 'string') {\n    const webOrientation = orientation.toLowerCase();\n    if (webOrientation !== 'default') {\n      return webOrientation;\n    }\n  }\n  return undefined;\n}\n\nfunction sanitizePublicPath(publicPath: unknown): string {\n  if (typeof publicPath !== 'string' || !publicPath.length) {\n    return '/';\n  }\n\n  if (publicPath.endsWith('/')) {\n    return publicPath;\n  }\n  return publicPath + '/';\n}\n\nexport function getConfigForPWA(projectRoot: string): PWAConfig {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  return ensurePWAConfig(exp);\n}\n\nfunction applyWebDefaults(appJSON: AppJSONConfig | ExpoConfig): PWAConfig {\n  // For RN CLI support\n  // @ts-ignore: expo object doesn't exist on ExpoConfig\n  const appManifest = appJSON.expo || appJSON || {};\n  const { web: webManifest = {}, splash = {}, ios = {}, android = {} } = appManifest;\n  const { build: webBuild = {}, webDangerous = {}, meta = {} } = webManifest;\n  const { apple = {} } = meta;\n\n  // rn-cli apps use a displayName value as well.\n  const { appName, webName } = getNameFromConfig(appJSON);\n\n  const languageISOCode = webManifest.lang || DEFAULT_LANGUAGE_ISO_CODE;\n  const buildOutputPath = getWebOutputPath(appJSON);\n  const publicPath = sanitizePublicPath(webManifest.publicPath);\n  const primaryColor = appManifest.primaryColor;\n  const description = appManifest.description;\n  // The theme_color sets the color of the tool bar, and may be reflected in the app's preview in task switchers.\n  const webThemeColor = webManifest.themeColor || primaryColor;\n  const dir = webManifest.dir;\n  const shortName = webManifest.shortName || webName;\n  const display = webManifest.display || DEFAULT_DISPLAY;\n  const startUrl = webManifest.startUrl;\n  const { scope, crossorigin } = webManifest;\n  const barStyle = apple.barStyle || webManifest.barStyle || DEFAULT_STATUS_BAR;\n\n  const orientation = ensurePWAorientation(webManifest.orientation || appManifest.orientation);\n\n  /**\n   * **Splash screen background color**\n   * `https://developers.google.com/web/fundamentals/web-app-manifest/#splash-screen`\n   * The background_color should be the same color as the load page,\n   * to provide a smooth transition from the splash screen to your app.\n   */\n  const backgroundColor = webManifest.backgroundColor || splash.backgroundColor; // No default background color\n\n  /**\n   *\n   * https://developer.mozilla.org/en-US/docs/Web/Manifest#prefer_related_applications\n   * Specifies a boolean value that hints for the user agent to indicate\n   * to the user that the specified native applications (see below) are recommended over the website.\n   * This should only be used if the related native apps really do offer something that the website can't... like Expo ;)\n   *\n   * >> The banner won't show up if the app is already installed:\n   * https://github.com/GoogleChrome/samples/issues/384#issuecomment-326387680\n   */\n  const preferRelatedApplications =\n    webManifest.preferRelatedApplications === undefined\n      ? DEFAULT_PREFER_RELATED_APPLICATIONS\n      : webManifest.preferRelatedApplications;\n\n  const relatedApplications = inferWebRelatedApplicationsFromConfig(appManifest);\n\n  return {\n    ...appManifest,\n    name: appName,\n    description,\n    primaryColor,\n    // Ensure these objects exist\n    ios: {\n      ...ios,\n    },\n    android: {\n      ...android,\n    },\n    web: {\n      ...webManifest,\n      meta: {\n        ...meta,\n        apple: {\n          ...apple,\n          formatDetection: apple.formatDetection || 'telephone=no',\n          mobileWebAppCapable: apple.mobileWebAppCapable || 'yes',\n          touchFullscreen: apple.touchFullscreen || 'yes',\n          barStyle,\n        },\n      },\n      build: {\n        ...webBuild,\n        output: buildOutputPath,\n        publicPath,\n      },\n      dangerous: webDangerous,\n      scope,\n      crossorigin,\n      description,\n      preferRelatedApplications,\n      relatedApplications,\n      startUrl,\n      shortName,\n      display,\n      orientation,\n      dir,\n      barStyle,\n      backgroundColor,\n      themeColor: webThemeColor,\n      lang: languageISOCode,\n      name: webName,\n    },\n  };\n}\n\n/**\n * https://developer.mozilla.org/en-US/docs/Web/Manifest#related_applications\n * An array of native applications that are installable by, or accessible to, the underlying platform\n * for example, a native Android application obtainable through the Google Play Store.\n * Such applications are intended to be alternatives to the\n * website that provides similar/equivalent functionality — like the native app version of the website.\n */\nfunction inferWebRelatedApplicationsFromConfig({ web = {}, ios = {}, android = {} }: any) {\n  const relatedApplications = web.relatedApplications || [];\n\n  const { bundleIdentifier, appStoreUrl } = ios;\n  if (bundleIdentifier) {\n    const PLATFORM_ITUNES = 'itunes';\n    const iosApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_ITUNES\n    );\n    if (!iosApp) {\n      relatedApplications.push({\n        platform: PLATFORM_ITUNES,\n        url: appStoreUrl,\n        id: bundleIdentifier,\n      });\n    }\n  }\n\n  const { package: androidPackage, playStoreUrl } = android;\n  if (androidPackage) {\n    const PLATFORM_PLAY = 'play';\n    const alreadyHasAndroidApp = relatedApplications.some(\n      ({ platform }: { platform: string }) => platform === PLATFORM_PLAY\n    );\n    if (!alreadyHasAndroidApp) {\n      relatedApplications.push({\n        platform: PLATFORM_PLAY,\n        url: playStoreUrl || `http://play.google.com/store/apps/details?id=${androidPackage}`,\n        id: androidPackage,\n      });\n    }\n  }\n\n  return relatedApplications;\n}\n\nexport function getSafariStartupImageConfig(config: ExpoConfig): IconOptions | null {\n  // enforce no defaults\n  const splashScreenObject = (input: any): IconOptions | null => {\n    if (!input.image) return null;\n    return {\n      resizeMode: input.resizeMode,\n      src: input.image,\n      backgroundColor: input.backgroundColor,\n    };\n  };\n\n  // Allow empty objects\n  if (isObject(config.web?.splash)) {\n    return splashScreenObject(config.web?.splash);\n  }\n  if (isObject(config.ios?.splash)) {\n    return splashScreenObject(config.ios?.splash);\n  }\n  if (isObject(config.splash)) {\n    return splashScreenObject(config.splash);\n  }\n  return null;\n}\n\nexport function getSafariIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // Allow empty objects\n  if (typeof config.ios?.icon === 'string') {\n    return validate(config.ios.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nexport function getFaviconIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // If the favicon is set but empty, we assume that the user does not want us to generate a favicon\n  if (typeof config.web?.favicon === 'string') {\n    // Empty string can be used to disable favicon generation.\n    if (!config.web?.favicon) {\n      return null;\n    }\n    return validate(config.web.favicon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nexport function getChromeIconConfig(config: ExpoConfig): IconOptions | null {\n  const validate = (input: string): IconOptions => ({\n    resizeMode: 'contain',\n    src: input,\n    backgroundColor: 'transparent',\n  });\n\n  // Allow empty objects\n  if (typeof config.android?.icon === 'string') {\n    return validate(config.android.icon);\n  }\n  if (typeof config.icon === 'string') {\n    return validate(config.icon);\n  }\n  return null;\n}\n\nfunction ensurePWAConfig(appJSON: AppJSONConfig | ExpoConfig): PWAConfig {\n  const config = applyWebDefaults(appJSON);\n  return config;\n}\n\nfunction isObject(item: any): item is Record<any, any> {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n}\n\nexport function createPWAManifestFromWebConfig(config?: ExpoConfig['web']): Manifest {\n  if (!isObject(config)) {\n    throw new Error('Web config must be a valid object');\n  }\n\n  const manifest: Manifest = {\n    background_color: config.backgroundColor,\n    description: config.description,\n    display: config.display,\n    lang: config.lang,\n    name: config.name,\n    scope: config.scope,\n    short_name: config.shortName,\n    start_url:\n      typeof config.startUrl === 'undefined' ? '/?utm_source=web_app_manifest' : config.startUrl,\n    theme_color: config.themeColor,\n    crossorigin: config.crossorigin,\n  };\n\n  // Browser will default to auto\n  if (config.dir) {\n    manifest.dir = config.dir.toLowerCase() as any;\n  }\n\n  if (config.orientation) {\n    manifest.orientation = config.orientation.toLowerCase() as any;\n  }\n\n  // Avoid defining an empty array, or setting prefer_related_applications to true when no applications are defined.\n  if (Array.isArray(config.relatedApplications) && config.relatedApplications.length > 0) {\n    manifest.related_applications = config.relatedApplications;\n    manifest.prefer_related_applications = config.preferRelatedApplications;\n  }\n\n  return manifest;\n}\n"]}