{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _bezier from \"./bezier\";\nvar _ease;\nvar Easing = function () {\n  function Easing() {\n    _classCallCheck(this, Easing);\n  }\n  _createClass(Easing, null, [{\n    key: \"step0\",\n    value: function step0(n) {\n      return n > 0 ? 1 : 0;\n    }\n  }, {\n    key: \"step1\",\n    value: function step1(n) {\n      return n >= 1 ? 1 : 0;\n    }\n  }, {\n    key: \"linear\",\n    value: function linear(t) {\n      return t;\n    }\n  }, {\n    key: \"ease\",\n    value: function ease(t) {\n      if (!_ease) {\n        _ease = Easing.bezier(0.42, 0, 1, 1);\n      }\n      return _ease(t);\n    }\n  }, {\n    key: \"quad\",\n    value: function quad(t) {\n      return t * t;\n    }\n  }, {\n    key: \"cubic\",\n    value: function cubic(t) {\n      return t * t * t;\n    }\n  }, {\n    key: \"poly\",\n    value: function poly(n) {\n      return function (t) {\n        return Math.pow(t, n);\n      };\n    }\n  }, {\n    key: \"sin\",\n    value: function sin(t) {\n      return 1 - Math.cos(t * Math.PI / 2);\n    }\n  }, {\n    key: \"circle\",\n    value: function circle(t) {\n      return 1 - Math.sqrt(1 - t * t);\n    }\n  }, {\n    key: \"exp\",\n    value: function exp(t) {\n      return Math.pow(2, 10 * (t - 1));\n    }\n  }, {\n    key: \"elastic\",\n    value: function elastic(bounciness) {\n      if (bounciness === void 0) {\n        bounciness = 1;\n      }\n      var p = bounciness * Math.PI;\n      return function (t) {\n        return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n      };\n    }\n  }, {\n    key: \"back\",\n    value: function back(s) {\n      if (s === void 0) {\n        s = 1.70158;\n      }\n      return function (t) {\n        return t * t * ((s + 1) * t - s);\n      };\n    }\n  }, {\n    key: \"bounce\",\n    value: function bounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n      if (t < 2 / 2.75) {\n        var _t = t - 1.5 / 2.75;\n        return 7.5625 * _t * _t + 0.75;\n      }\n      if (t < 2.5 / 2.75) {\n        var _t2 = t - 2.25 / 2.75;\n        return 7.5625 * _t2 * _t2 + 0.9375;\n      }\n      var t2 = t - 2.625 / 2.75;\n      return 7.5625 * t2 * t2 + 0.984375;\n    }\n  }, {\n    key: \"bezier\",\n    value: function bezier(x1, y1, x2, y2) {\n      return _bezier(x1, y1, x2, y2);\n    }\n  }, {\n    key: \"in\",\n    value: function _in(easing) {\n      return easing;\n    }\n  }, {\n    key: \"out\",\n    value: function out(easing) {\n      return function (t) {\n        return 1 - easing(1 - t);\n      };\n    }\n  }, {\n    key: \"inOut\",\n    value: function inOut(easing) {\n      return function (t) {\n        if (t < 0.5) {\n          return easing(t * 2) / 2;\n        }\n        return 1 - easing((1 - t) * 2) / 2;\n      };\n    }\n  }]);\n  return Easing;\n}();\nexport default Easing;","map":{"version":3,"names":["_classCallCheck","_createClass","_bezier","ease","Easing","key","value","step0","n","step1","linear","t","bezier","quad","cubic","poly","Math","pow","sin","cos","PI","circle","sqrt","exp","elastic","bounciness","p","back","s","bounce","_t","_t2","t2","x1","y1","x2","y2","_in","easing","out","inOut"],"sources":["C:/Users/pedro/Documents/FitQuest/semester-project-fitquest-gameified-fitness-application/node_modules/react-native-web/dist/vendor/react-native/Animated/Easing.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * @format\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\nimport _bezier from './bezier';\r\nvar ease;\r\n\r\n/**\r\n * The `Easing` module implements common easing functions. This module is used\r\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\r\n * believable motion in animations.\r\n *\r\n * You can find a visualization of some common easing functions at\r\n * http://easings.net/\r\n *\r\n * ### Predefined animations\r\n *\r\n * The `Easing` module provides several predefined animations through the\r\n * following methods:\r\n *\r\n * - [`back`](docs/easing.html#back) provides a simple animation where the\r\n *   object goes slightly back before moving forward\r\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\r\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\r\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\r\n *\r\n * ### Standard functions\r\n *\r\n * Three standard easing functions are provided:\r\n *\r\n * - [`linear`](docs/easing.html#linear)\r\n * - [`quad`](docs/easing.html#quad)\r\n * - [`cubic`](docs/easing.html#cubic)\r\n *\r\n * The [`poly`](docs/easing.html#poly) function can be used to implement\r\n * quartic, quintic, and other higher power functions.\r\n *\r\n * ### Additional functions\r\n *\r\n * Additional mathematical functions are provided by the following methods:\r\n *\r\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\r\n * - [`circle`](docs/easing.html#circle) provides a circular function\r\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\r\n * - [`exp`](docs/easing.html#exp) provides an exponential function\r\n *\r\n * The following helpers are used to modify other easing functions.\r\n *\r\n * - [`in`](docs/easing.html#in) runs an easing function forwards\r\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\r\n * - [`out`](docs/easing.html#out) runs an easing function backwards\r\n */\r\nclass Easing {\r\n  /**\r\n   * A stepping function, returns 1 for any positive value of `n`.\r\n   */\r\n  static step0(n) {\r\n    return n > 0 ? 1 : 0;\r\n  }\r\n\r\n  /**\r\n   * A stepping function, returns 1 if `n` is greater than or equal to 1.\r\n   */\r\n  static step1(n) {\r\n    return n >= 1 ? 1 : 0;\r\n  }\r\n\r\n  /**\r\n   * A linear function, `f(t) = t`. Position correlates to elapsed time one to\r\n   * one.\r\n   *\r\n   * http://cubic-bezier.com/#0,0,1,1\r\n   */\r\n  static linear(t) {\r\n    return t;\r\n  }\r\n\r\n  /**\r\n   * A simple inertial interaction, similar to an object slowly accelerating to\r\n   * speed.\r\n   *\r\n   * http://cubic-bezier.com/#.42,0,1,1\r\n   */\r\n  static ease(t) {\r\n    if (!ease) {\r\n      ease = Easing.bezier(0.42, 0, 1, 1);\r\n    }\r\n    return ease(t);\r\n  }\r\n\r\n  /**\r\n   * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\r\n   * time.\r\n   *\r\n   * http://easings.net/#easeInQuad\r\n   */\r\n  static quad(t) {\r\n    return t * t;\r\n  }\r\n\r\n  /**\r\n   * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\r\n   * time.\r\n   *\r\n   * http://easings.net/#easeInCubic\r\n   */\r\n  static cubic(t) {\r\n    return t * t * t;\r\n  }\r\n\r\n  /**\r\n   * A power function. Position is equal to the Nth power of elapsed time.\r\n   *\r\n   * n = 4: http://easings.net/#easeInQuart\r\n   * n = 5: http://easings.net/#easeInQuint\r\n   */\r\n  static poly(n) {\r\n    return t => Math.pow(t, n);\r\n  }\r\n\r\n  /**\r\n   * A sinusoidal function.\r\n   *\r\n   * http://easings.net/#easeInSine\r\n   */\r\n  static sin(t) {\r\n    return 1 - Math.cos(t * Math.PI / 2);\r\n  }\r\n\r\n  /**\r\n   * A circular function.\r\n   *\r\n   * http://easings.net/#easeInCirc\r\n   */\r\n  static circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n  }\r\n\r\n  /**\r\n   * An exponential function.\r\n   *\r\n   * http://easings.net/#easeInExpo\r\n   */\r\n  static exp(t) {\r\n    return Math.pow(2, 10 * (t - 1));\r\n  }\r\n\r\n  /**\r\n   * A simple elastic interaction, similar to a spring oscillating back and\r\n   * forth.\r\n   *\r\n   * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\r\n   * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\r\n   * times.\r\n   *\r\n   * http://easings.net/#easeInElastic\r\n   */\r\n  static elastic(bounciness) {\r\n    if (bounciness === void 0) {\r\n      bounciness = 1;\r\n    }\r\n    var p = bounciness * Math.PI;\r\n    return t => 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\r\n  }\r\n\r\n  /**\r\n   * Use with `Animated.parallel()` to create a simple effect where the object\r\n   * animates back slightly as the animation starts.\r\n   *\r\n   * Wolfram Plot:\r\n   *\r\n   * - http://tiny.cc/back_default (s = 1.70158, default)\r\n   */\r\n  static back(s) {\r\n    if (s === void 0) {\r\n      s = 1.70158;\r\n    }\r\n    return t => t * t * ((s + 1) * t - s);\r\n  }\r\n\r\n  /**\r\n   * Provides a simple bouncing effect.\r\n   *\r\n   * http://easings.net/#easeInBounce\r\n   */\r\n  static bounce(t) {\r\n    if (t < 1 / 2.75) {\r\n      return 7.5625 * t * t;\r\n    }\r\n    if (t < 2 / 2.75) {\r\n      var _t = t - 1.5 / 2.75;\r\n      return 7.5625 * _t * _t + 0.75;\r\n    }\r\n    if (t < 2.5 / 2.75) {\r\n      var _t2 = t - 2.25 / 2.75;\r\n      return 7.5625 * _t2 * _t2 + 0.9375;\r\n    }\r\n    var t2 = t - 2.625 / 2.75;\r\n    return 7.5625 * t2 * t2 + 0.984375;\r\n  }\r\n\r\n  /**\r\n   * Provides a cubic bezier curve, equivalent to CSS Transitions'\r\n   * `transition-timing-function`.\r\n   *\r\n   * A useful tool to visualize cubic bezier curves can be found at\r\n   * http://cubic-bezier.com/\r\n   */\r\n  static bezier(x1, y1, x2, y2) {\r\n    return _bezier(x1, y1, x2, y2);\r\n  }\r\n\r\n  /**\r\n   * Runs an easing function forwards.\r\n   */\r\n  static in(easing) {\r\n    return easing;\r\n  }\r\n\r\n  /**\r\n   * Runs an easing function backwards.\r\n   */\r\n  static out(easing) {\r\n    return t => 1 - easing(1 - t);\r\n  }\r\n\r\n  /**\r\n   * Makes any easing function symmetrical. The easing function will run\r\n   * forwards for half of the duration, then backwards for the rest of the\r\n   * duration.\r\n   */\r\n  static inOut(easing) {\r\n    return t => {\r\n      if (t < 0.5) {\r\n        return easing(t * 2) / 2;\r\n      }\r\n      return 1 - easing((1 - t) * 2) / 2;\r\n    };\r\n  }\r\n}\r\nexport default Easing;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}