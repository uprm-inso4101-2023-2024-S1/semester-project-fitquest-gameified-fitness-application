{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TimerApp = function TimerApp(_ref) {\n  var _ref$initialTime = _ref.initialTime,\n    initialTime = _ref$initialTime === void 0 ? 0 : _ref$initialTime;\n  var _useState = useState(initialTime),\n    _useState2 = _slicedToArray(_useState, 2),\n    seconds = _useState2[0],\n    setSeconds = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isRunning = _useState4[0],\n    setIsRunning = _useState4[1];\n  useEffect(function () {\n    var interval;\n    if (isRunning) {\n      interval = setInterval(function () {\n        setSeconds(function (prevSeconds) {\n          return prevSeconds + 1;\n        });\n      }, 1000);\n    }\n    return function () {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [isRunning]);\n  var startTimer = function startTimer() {\n    setIsRunning(true);\n  };\n  var stopTimer = function stopTimer() {\n    setIsRunning(false);\n  };\n  var resetTimer = function resetTimer() {\n    stopTimer();\n    setSeconds(0);\n  };\n  var toggleTimer = function toggleTimer() {\n    setIsRunning(!isRunning);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: `Time: ${seconds}s (Click to Start)`,\n      onPress: startTimer\n    }), _jsx(Button, {\n      title: \"Stop Timer\",\n      onPress: stopTimer\n    }), _jsx(Button, {\n      title: \"Reset Timer\",\n      onPress: resetTimer\n    })]\n  });\n};\nexport default TimerApp;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","TimerApp","_ref","_ref$initialTime","initialTime","_useState","_useState2","_slicedToArray","seconds","setSeconds","_useState3","_useState4","isRunning","setIsRunning","interval","setInterval","prevSeconds","clearInterval","startTimer","stopTimer","resetTimer","toggleTimer","View","children","Button","title","onPress"],"sources":["C:/Users/pedro/Documents/FitQuest/semester-project-fitquest-gameified-fitness-application/Front End/FitQuestApp/components/TimerApp.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { View, Text, Button, StyleSheet } from \"react-native\";\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ninterface TimerAppProps {\r\n    initialTime?: number;\r\n}\r\n\r\nconst TimerApp: React.FC<TimerAppProps> = ({ initialTime = 0}) => {\r\n    const [seconds, setSeconds] = useState<number>(initialTime);\r\n    const [isRunning, setIsRunning] = useState<boolean>(false);\r\n\r\n    useEffect (() => {\r\n        let interval:  NodeJS.Timeout;\r\n\r\n        if(isRunning) {\r\n            interval = setInterval(()=> {\r\n                setSeconds(prevSeconds => prevSeconds + 1);\r\n            }, 1000);\r\n        }\r\n\r\n        return () => {\r\n            if (interval) {\r\n                clearInterval(interval);\r\n            }\r\n        };\r\n\r\n        \r\n    }, [isRunning]);\r\n\r\n    const startTimer = () => {\r\n        setIsRunning(true);\r\n    };\r\n\r\n    const stopTimer = () => {\r\n        setIsRunning(false);\r\n    };\r\n\r\n    const resetTimer = () => {\r\n        stopTimer();\r\n        setSeconds(0);\r\n    };\r\n\r\n    const toggleTimer = () => {\r\n        setIsRunning(!isRunning)\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Button title={`Time: ${seconds}s (Click to Start)`} onPress={startTimer} />\r\n            <Button title=\"Stop Timer\" onPress={stopTimer} />\r\n            <Button title=\"Reset Timer\" onPress={resetTimer} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default TimerApp\r\n"],"mappings":";;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAMnD,IAAMC,QAAiC,GAAG,SAApCA,QAAiCA,CAAAC,IAAA,EAA2B;EAAA,IAAAC,gBAAA,GAAAD,IAAA,CAArBE,WAAW;IAAXA,WAAW,GAAAD,gBAAA,cAAG,CAAC,GAAAA,gBAAA;EACxD,IAAAE,SAAA,GAA8BT,QAAQ,CAASQ,WAAW,CAAC;IAAAE,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAkCd,QAAQ,CAAU,KAAK,CAAC;IAAAe,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9BhB,SAAS,CAAE,YAAM;IACb,IAAImB,QAAyB;IAE7B,IAAGF,SAAS,EAAE;MACVE,QAAQ,GAAGC,WAAW,CAAC,YAAK;QACxBN,UAAU,CAAC,UAAAO,WAAW;UAAA,OAAIA,WAAW,GAAG,CAAC;QAAA,EAAC;MAC9C,CAAC,EAAE,IAAI,CAAC;IACZ;IAEA,OAAO,YAAM;MACT,IAAIF,QAAQ,EAAE;QACVG,aAAa,CAACH,QAAQ,CAAC;MAC3B;IACJ,CAAC;EAGL,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAEf,IAAMM,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACrBL,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,IAAMM,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACpBN,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACrBD,SAAS,CAAC,CAAC;IACXV,UAAU,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,IAAMY,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBR,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAED,OACIZ,KAAA,CAACsB,IAAI;IAAAC,QAAA,GACDzB,IAAA,CAAC0B,MAAM;MAACC,KAAK,EAAG,SAAQjB,OAAQ,oBAAoB;MAACkB,OAAO,EAAER;IAAW,CAAE,CAAC,EAC5EpB,IAAA,CAAC0B,MAAM;MAACC,KAAK,EAAC,YAAY;MAACC,OAAO,EAAEP;IAAU,CAAE,CAAC,EACjDrB,IAAA,CAAC0B,MAAM;MAACC,KAAK,EAAC,aAAa;MAACC,OAAO,EAAEN;IAAW,CAAE,CAAC;EAAA,CACjD,CAAC;AAEf,CAAC;AAED,eAAenB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}