{"ast":null,"code":"'use strict';\n\nimport PressResponder from \"./PressResponder\";\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n  var pressResponder = pressResponderRef.current;\n  useEffect(function () {\n    pressResponder.configure(config);\n  }, [config, pressResponder]);\n  useEffect(function () {\n    return function () {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}","map":{"version":3,"names":["PressResponder","useDebugValue","useEffect","useRef","usePressEvents","hostRef","config","pressResponderRef","current","pressResponder","configure","reset","getEventHandlers"],"sources":["C:/Users/pedro/Documents/FitQuest/semester-project-fitquest-gameified-fitness-application/node_modules/react-native-web/dist/modules/usePressEvents/index.js"],"sourcesContent":["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n * @format\r\n */\r\n\r\n'use strict';\r\n\r\nimport PressResponder from './PressResponder';\r\nimport { useDebugValue, useEffect, useRef } from 'react';\r\nexport default function usePressEvents(hostRef, config) {\r\n  var pressResponderRef = useRef(null);\r\n  if (pressResponderRef.current == null) {\r\n    pressResponderRef.current = new PressResponder(config);\r\n  }\r\n  var pressResponder = pressResponderRef.current;\r\n\r\n  // Re-configure to use the current node and configuration.\r\n  useEffect(() => {\r\n    pressResponder.configure(config);\r\n  }, [config, pressResponder]);\r\n\r\n  // Reset the `pressResponder` when cleanup needs to occur. This is\r\n  // a separate effect because we do not want to rest the responder when `config` changes.\r\n  useEffect(() => {\r\n    return () => {\r\n      pressResponder.reset();\r\n    };\r\n  }, [pressResponder]);\r\n  useDebugValue(config);\r\n  return pressResponder.getEventHandlers();\r\n}"],"mappings":"AAUA,YAAY;;AAEZ,OAAOA,cAAc;AACrB,SAASC,aAAa,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACxD,eAAe,SAASC,cAAcA,CAACC,OAAO,EAAEC,MAAM,EAAE;EACtD,IAAIC,iBAAiB,GAAGJ,MAAM,CAAC,IAAI,CAAC;EACpC,IAAII,iBAAiB,CAACC,OAAO,IAAI,IAAI,EAAE;IACrCD,iBAAiB,CAACC,OAAO,GAAG,IAAIR,cAAc,CAACM,MAAM,CAAC;EACxD;EACA,IAAIG,cAAc,GAAGF,iBAAiB,CAACC,OAAO;EAG9CN,SAAS,CAAC,YAAM;IACdO,cAAc,CAACC,SAAS,CAACJ,MAAM,CAAC;EAClC,CAAC,EAAE,CAACA,MAAM,EAAEG,cAAc,CAAC,CAAC;EAI5BP,SAAS,CAAC,YAAM;IACd,OAAO,YAAM;MACXO,cAAc,CAACE,KAAK,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,CAACF,cAAc,CAAC,CAAC;EACpBR,aAAa,CAACK,MAAM,CAAC;EACrB,OAAOG,cAAc,CAACG,gBAAgB,CAAC,CAAC;AAC1C"},"metadata":{},"sourceType":"module","externalDependencies":[]}