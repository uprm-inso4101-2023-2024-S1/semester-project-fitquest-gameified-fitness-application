{"ast":null,"code":"var rtlScripts = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nvar rtlLangs = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'far', 'glk', 'he', 'iw', 'khw', 'ks', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\nvar cache = new Map();\nexport function isLocaleRTL(locale) {\n  var cachedRTL = cache.get(locale);\n  if (cachedRTL) {\n    return cachedRTL;\n  }\n  var isRTL = false;\n  if (Intl.Locale) {\n    var script = new Intl.Locale(locale).maximize().script;\n    isRTL = rtlScripts.has(script);\n  } else {\n    var lang = locale.split('-')[0];\n    isRTL = rtlLangs.has(lang);\n  }\n  cache.set(locale, isRTL);\n  return isRTL;\n}","map":{"version":3,"names":["rtlScripts","Set","rtlLangs","cache","Map","isLocaleRTL","locale","cachedRTL","get","isRTL","Intl","Locale","script","maximize","has","lang","split","set"],"sources":["C:/Users/pedro/Documents/FitQuest/semester-project-fitquest-gameified-fitness-application/node_modules/react-native-web/dist/modules/useLocale/isLocaleRTL.js"],"sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\n\r\nvar rtlScripts = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\r\nvar rtlLangs = new Set(['ae',\r\n// Avestan\r\n'ar',\r\n// Arabic\r\n'arc',\r\n// Aramaic\r\n'bcc',\r\n// Southern Balochi\r\n'bqi',\r\n// Bakthiari\r\n'ckb',\r\n// Sorani\r\n'dv',\r\n// Dhivehi\r\n'fa', 'far',\r\n// Persian\r\n'glk',\r\n// Gilaki\r\n'he', 'iw',\r\n// Hebrew\r\n'khw',\r\n// Khowar\r\n'ks',\r\n// Kashmiri\r\n'ku',\r\n// Kurdish\r\n'mzn',\r\n// Mazanderani\r\n'nqo',\r\n// N'Ko\r\n'pnb',\r\n// Western Punjabi\r\n'ps',\r\n// Pashto\r\n'sd',\r\n// Sindhi\r\n'ug',\r\n// Uyghur\r\n'ur',\r\n// Urdu\r\n'yi' // Yiddish\r\n]);\r\n\r\nvar cache = new Map();\r\n\r\n/**\r\n * Determine the writing direction of a locale\r\n */\r\nexport function isLocaleRTL(locale) {\r\n  var cachedRTL = cache.get(locale);\r\n  if (cachedRTL) {\r\n    return cachedRTL;\r\n  }\r\n  var isRTL = false;\r\n  // $FlowFixMe\r\n  if (Intl.Locale) {\r\n    // $FlowFixMe\r\n    var script = new Intl.Locale(locale).maximize().script;\r\n    isRTL = rtlScripts.has(script);\r\n  } else {\r\n    // Fallback to inferring from language\r\n    var lang = locale.split('-')[0];\r\n    isRTL = rtlLangs.has(lang);\r\n  }\r\n  cache.set(locale, isRTL);\r\n  return isRTL;\r\n}"],"mappings":"AASA,IAAIA,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAC1G,IAAIC,QAAQ,GAAG,IAAID,GAAG,CAAC,CAAC,IAAI,EAE5B,IAAI,EAEJ,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,IAAI,EAEJ,IAAI,EAAE,KAAK,EAEX,KAAK,EAEL,IAAI,EAAE,IAAI,EAEV,KAAK,EAEL,IAAI,EAEJ,IAAI,EAEJ,KAAK,EAEL,KAAK,EAEL,KAAK,EAEL,IAAI,EAEJ,IAAI,EAEJ,IAAI,EAEJ,IAAI,EAEJ,IAAI,CACH,CAAC;AAEF,IAAIE,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;AAKrB,OAAO,SAASC,WAAWA,CAACC,MAAM,EAAE;EAClC,IAAIC,SAAS,GAAGJ,KAAK,CAACK,GAAG,CAACF,MAAM,CAAC;EACjC,IAAIC,SAAS,EAAE;IACb,OAAOA,SAAS;EAClB;EACA,IAAIE,KAAK,GAAG,KAAK;EAEjB,IAAIC,IAAI,CAACC,MAAM,EAAE;IAEf,IAAIC,MAAM,GAAG,IAAIF,IAAI,CAACC,MAAM,CAACL,MAAM,CAAC,CAACO,QAAQ,CAAC,CAAC,CAACD,MAAM;IACtDH,KAAK,GAAGT,UAAU,CAACc,GAAG,CAACF,MAAM,CAAC;EAChC,CAAC,MAAM;IAEL,IAAIG,IAAI,GAAGT,MAAM,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/BP,KAAK,GAAGP,QAAQ,CAACY,GAAG,CAACC,IAAI,CAAC;EAC5B;EACAZ,KAAK,CAACc,GAAG,CAACX,MAAM,EAAEG,KAAK,CAAC;EACxB,OAAOA,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}